@using System.Collections.ObjectModel

@page "/"

<Accordion Overflow="visible">
    <Collapse Visible="@optionsVisible">
        <CollapseHeader>
            <Heading Size="HeadingSize.Is3">
                Options <Button Clicked="@(() => ToggleOptions())" Outline="true" Color="Color.Secondary">@showHide</Button>
            </Heading>
        </CollapseHeader>
        <CollapseBody Overflow="visible">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field Horizontal="true" Margin="Margin.Is1
                    ">
                        <FieldLabel Margin="Margin.Is2">Countries:</FieldLabel>
                        <FieldBody>
                            <Select TValue="string">
                                @foreach (var country in Countries)
                                {
                                    <SelectItem Value="@country">@country</SelectItem>
                                }
                            </Select>
                        </FieldBody>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field Horizontal="true">
                        <FieldLabel Margin="Margin.Is2">Countries:</FieldLabel>
                        <FieldBody>
                            <Select TValue="string">
                                @foreach (var country in Countries)
                                {
                                    <SelectItem Value="@country">@country</SelectItem>
                                }
                            </Select>
                        </FieldBody>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field Horizontal="true">
                        <FieldLabel Margin="Margin.Is2">Filter (all)</FieldLabel>
                        <FieldBody>
                            <Autocomplete Data="@myDdlData"
                                TextField="@((item)=>item.MyTextField)"
                                ValueField="@((item)=>item.MyTextField)"
                                SelectedValue="@selectedSearchValue"
                                SelectedValueChanged="@MySearchHandler"
                                Placeholder="Search..." />
                        </FieldBody>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field Horizontal="true">
                        <FieldLabel Margin="Margin.Is2">Chart Type:</FieldLabel>
                        <FieldBody>
                            <RadioGroup TValue="string" Inline="true" Buttons="true">
                                <Radio TValue="string" Value="@chartType" Inline="true">Pie Chart</Radio>
                                <Radio TValue="string" Value="@chartType" Inline="true">Bar Chart</Radio>
                            </RadioGroup>
                        </FieldBody>
                    </Field>
                </Column>
            </Row>
        </CollapseBody>
    </Collapse>
</Accordion>

@code {

    
    string showHide { get; set; } = "Show";

    bool optionsVisible { get; set; } = false;

    string chartType = "pie";

    void ToggleOptions ()
    {
        optionsVisible = !optionsVisible;

        if(optionsVisible)
        {
            showHide = "Hide";
        }
        else
        {
            showHide = "Show";
        }
    }

        public class MySelectModel
    {
        public int MyValueField { get; set; }
        public string MyTextField { get; set; }
    }

    static string[] Countries = { "Albania", "Andorra", "Armenia", "Austria", "Azerbaijan", "Belarus", "Belgium", "Bosnia & Herzegovina", "Bulgaria", "Croatia", "Cyprus", "Czech Republic", "Denmark", "Estonia", "Finland", "France", "Georgia", "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Kosovo", "Latvia", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Malta", "Moldova", "Monaco", "Montenegro", "Netherlands", "Norway", "Poland", "Portugal", "Romania", "Russia", "San Marino", "Serbia", "Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", "Turkey", "Ukraine", "United Kingdom", "Vatican City" };
    IEnumerable<MySelectModel> myDdlData = Enumerable.Range( 1, Countries.Length ).Select( x => new MySelectModel { MyTextField = Countries[x - 1], MyValueField = x } );

    object selectedSearchValue { get; set; }

    void MySearchHandler( object newValue )
    {
        selectedSearchValue = newValue;
    }

}
